
-- Calc.cf: A grammar for arithmetical expressions

ELam.    Exp  ::= "fun" [ Arg ] "->" Exp ;
ELet.    Exp  ::= "let" Exp "=" Exp "in" Exp ;
EIf.     Exp  ::= "if" Exp "then" Exp "else" Exp ;
EOr.     Exp1 ::= Exp2 "||" Exp1 ;
EAnd.    Exp2 ::= Exp3 "&&" Exp2 ;
ENot.    Exp6 ::= "!" Exp7 ;
ERel.    Exp3 ::= Exp3 RelOp Exp4 ;
EAdd.    Exp4 ::= Exp4 AddOp Exp5 ;
EMul.    Exp5 ::= Exp5 MulOp Exp6 ;
EApp.    Exp6 ::= Exp6 "(" [ AppArg ] ")" ;
EInt. 	 Exp7 ::= Integer ;
EFloat.  Exp7 ::= Double ;
EBool.   Exp7 ::= Boolean ;
EVar.    Exp7 ::= Ident ;
EString. Exp7 ::= String ;

Plus.   AddOp ::= "+" ;
Minus.  AddOp ::= "-" ;

Times.  MulOp ::= "*" ;
Div.    MulOp ::= "/" ;

LTC.  RelOp ::= "<" ;
LEC.  RelOp ::= "<=" ;
GTC.  RelOp ::= ">" ;
GEC.  RelOp ::= ">=" ;
EQC.  RelOp ::= "==" ;

coercions 	Exp 	7 ;
separator       Exp     "";

ArgIdent. Arg ::= Ident  ;
separator Arg "";

AppArgExp. AppArg ::= Exp ;
separator AppArg ",";

BTrue.  Boolean ::= "True" ;
BFalse. Boolean ::= "False" ;